@implements IDisposable
@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg bg-body-tertiary fixed-top">
    <div class="container-fluid">
        <a class="navbar-brand d-flex align-items-center gap-2" href="/">
            <img src="/logo.png" alt="Logo" width="24" height="24">
            URL Shortener. Free. Fast.
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarScroll"
                aria-controls="navbarScroll" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarScroll">
            <ul class="navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll" style="--bs-scroll-height: 100px;">
                @* No left-side links for now *@
            </ul>

            <ul class="navbar-nav">
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                               data-bs-toggle="dropdown" aria-expanded="false">
                                @context.User.Identity?.Name
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                <li><NavLink class="dropdown-item" href="Account/Manage">Account</NavLink></li>
                                <li><NavLink class="dropdown-item" href="urls">My Urls</NavLink></li>
                                <li>
                                    <form action="Account/Logout" method="post" class="dropdown-item p-0">
                                        <AntiforgeryToken />
                                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                        <button type="submit" class="btn btn-link dropdown-item">Logout</button>
                                    </form>
                                </li>
                            </ul>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item d-flex align-items-center">
                            <div class="btn-group">
                                <NavLink class="btn btn-outline-primary" href="Account/Login">Login</NavLink>
                                <NavLink class="btn btn-outline-primary" href="Account/Register">Register</NavLink>
                            </div>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
